- name: look for alarm status
  describe_alarms:
    region: "croc"
    alarm_name_prefix: "scaling-low"
    alarm_state: "alarm"
  register: describe_alarms_query

- name: count alarmed instances
  set_fact:
    alarmed_count: "{{ describe_alarms_query.meta | length }}"
    alarmed_ids: "{{ describe_alarms_query.meta }}"

- name: stop if no alarms
  fail:
    msg: no alarms fired
  when: alarmed_count | int == 0

- name: count all described instances
  set_fact: 
    all_count: "{{ groups['tag_role_backend'] | length }}"

- name: fail if last two instance remaining
  fail:
    msg: cant destroy last two instances
  when: all_count | int == 2

- name: destroy tags for marked instances
  ec2_tag:
    ec2_url: "https://api.cloud.croc.ru"
    region: croc
    resource: "{{ alarmed_ids[0].split('_')[1] }}"
    state: absent
    tags:
      role: backend

- name: destroy instances
  ec2:
    region: croc
    state: absent
    instance_ids: "{{ alarmed_ids[0].split('_')[1] }}"

- name: destroy low alarms
  ec2_metric_alarm:
    state: absent
    region: croc
    name: "scaling-low_{{ alarmed_ids[0].split('_')[1] }}"

- name: destroy high alarms
  ec2_metric_alarm:
    state: absent
    region: croc
    name: "scaling-high_{{ alarmed_ids[0].split('_')[1] }}"
