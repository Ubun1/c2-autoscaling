---

- name: look for alarm status
  describe_alarms:
    region: croc
    alarm_name_prefix: scaling-low
    alarm_state: alarm
  register: describe_alarms_query

- name: fail if no alarms
  vars:
    alarmed_count: "{{ describe_alarms_query.meta | length }}"
  fail:
    msg: no alarms fired
  when: alarmed_count | int == 0

- name: fail if only two instances remaining
  vars:
    all_count: "{{ groups['tag_role_backend'] | length }}"
  fail:
    msg: cant destroy last two instances
  when: all_count | int == 2

- name: get alarmed instance_ids
  set_fact:
    alarmed_id: "{{ describe_alarms_query.meta[0].split('_')[1] }}"

- name: destroy tags for marked instances
  ec2_tag:
    ec2_url: "https://api.cloud.croc.ru"
    region: croc
    resource: "{{ alarmed_id }}"
    state: absent
    tags:
      role: backend

- name: destroy instances
  ec2:
    region: croc
    state: absent
    instance_ids: "{{ alarmed_id }}"

- name: destroy alarms
  ec2_metric_alarm:
    state: absent
    region: croc
    name: "scaling-{{ item }}_{{ alarmed_id }}"
  loop:
    - low
    - high
